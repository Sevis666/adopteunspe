<h1 class="page-title">Panneau de contr√¥le</h1>

<div class="toolbox-container">
  <div class="tool-wrapper">
    <h2 class="tool-title">Freezing</h2>
    <p>There are <b>four main phases</b> in the creation of questions :</p>
    <ul>
      <li><b>First</b> : Everything can be modified, questions can be created, automatically destroyed, modified, etc.</li>
      <li><b>Second</b> : Questions are frozen, but can still be automatically removed, and answers can be modified</li>
      <li><b>Third</b> : Both questions and their answers are frozen, questions will no longer be deleted</li>
      <li><b>Fourth</b> : Everything is frozen, the users database resets, and the root toggles, everyting is ready for the matching</li>
    </ul>
    <p>Please make sure everybody understands this scheme, and make sure to notify users before freezing anything</p>

    <% q_frozen = Config::frozen?(:questions)
       a_frozen = Config::frozen?(:answers)
       p_frozen = Config::frozen?(:answer_points) %>
    <div class="freeze-wrapper">
      <div class="freeze-box">
        <h4>Questions</h4>
        <p>Current state : <%= q_frozen ? "Frozen" : "Modifiable" %></p>
        <%= form_tag("/admin/freeze", method: "post") do %>
          <%= hidden_field_tag(:category, "questions") %>
          <%= submit_tag (q_frozen ? "Unfreeze" : "Freeze"),
            class: "button centered-button" %>
        <% end %>
      </div>
      <div class="freeze-box">
        <h4>Answers</h4>
        <p>Current state : <%= Config::frozen?(:answers) ? "Frozen" : "Modifiable" %></p>
        <%= form_tag("/admin/freeze", method: "post") do %>
          <%= hidden_field_tag(:category, "answers") %>
          <%= submit_tag (a_frozen ? "Unfreeze" : "Freeze"),
            class: "button centered-button" %>
        <% end %>
      </div>
      <div class="freeze-box">
        <h4>Answer points</h4>
        <p>Current state : <%= Config::frozen?(:answer_points) ? "Frozen" : "Modifiable" %></p>
        <%= form_tag("/admin/freeze", method: "post") do %>
          <%= hidden_field_tag(:category, "answer_points") %>
          <%= submit_tag (p_frozen ? "Unfreeze" : "Freeze"),
            class: "button centered-button" %>
        <% end %>
      </div>
    </div>
  </div>

  <div class="tool-wrapper">
    <h2 class="tool-title">Balance points</h2>
    <p>Triggering this action will cause all points to be messed up, realigning points for every question so the sum for each student is as close as possible to <%= Rails.configuration.x.total_points_per_question %>, but keeping proper proportions.</p>
    <p><b>This is not reversible</b>, please make sure everybody understands what will happen before triggering it, and send an e-mail to all students so they have the option to rebalance their points themselve. Only use this as a last resort to avoid bias during matching</p>
    <%= form_tag("/admin/balance", method: "post") do %>
      <%= submit_tag "Balance now", class: "button centered-button" %>
    <% end %>
  </div>

  <div class="tool-wrapper">
    <h2 class="tool-title">Activity monitor</h2>
    <div class="activity-monitor-wrapper">
      <table>
        <tr>
          <th style="text-align:left;width:100%">Name</th>
          <th style="min-width:12rem">Last Connection</th>
          <th>Time spent</th>
          <th>Unanswered</th>
          <th>Unvoted</th>
          <th>Unrated</th>
        </tr>
        <% Spe.all.order(:id).each do |spe| %>
          <tr>
            <td style="text-align:left"><%= spe.full_name %></td>
            <td><%= spe.last_connection %></td>
            <td><%= spe.time_spent_on_site %></td>
            <td><%= spe.unanswered_questions_count %></td>
            <td><%= spe.unvoted_questions_count %></td>
            <td><%= spe.unrated_questions_count %></td>
          </tr>
        <% end %>
      </table>
    </div>
  </div>

  <div class="tool-wrapper">
    <h2 class="tool-title">Key management</h2>
    <p>You are [insert rank here]. Here are the key management tools you can access</p>
    <!-- key management tools :
      - General key creation, revocation
      - Lieutenant key creation, revocation
      - User key creation, revocation
      - User name or e-mail modifications
    -->
  </div>

  <div class="tool-wrapper">
    <h2 class="tool-title">Logging</h2>
    <div class="logging-wrapper">
      <table>
        <tr>
          <th style="min-width:12rem">Timestamp</th>
          <th style="text-align:left;width:100%">Description</th>
        </tr>
        <% Log.list.each do |l| %>
          <tr>
            <td><%= l.updated_at.strftime "%Y-%m-%d %H:%M:%S" %></td>
            <td style="text-align:left"><%= l.description %></td>
          </tr>
        <% end %>
      </table>
    </div>
  </div>

  <div class="tool-wrapper">
    <h2 class="tool-title">Toggle multiple flag for question</h2>
    <%= form_tag("/admin/toggle_multiple_flag", method: "post", class: "basic-number-form", remote: true, onsubmit: "clearInput(this, 'question_id')") do %>
      <%= number_field_tag(:question_id, nil, placeholder: "Id", autocomplete: "off") %>
      <%= submit_tag("Toggle", class: "submit-button")%>
    <% end %>
  </div>

  <div class="tool-wrapper">
    <h2 class="tool-title">Question removal</h2>

    <p style="text-align:center">Questions having fewer votes than the threshold (threshold included) will be deleted</p>

    <% table = Hash.new { |h, k| h[k] = 0 }
       Question.find_each do |q|
         table[q.vote_count.to_s] += 1
       end
       cur = tot = Question.count
       cumul = {}
       table.keys.sort.reverse.each do |i|
         cumul[i] = (100 * cur / tot).round(2)
         cur -= table[i]
       end %>
    <table style="margin:0 auto">
      <tr>
        <th>Vote count</th>
        <th>Question count</th>
        <th>Cumulated proportion</th>
      </tr>
      <% table.keys.sort.each do |i| %>
        <tr>
          <td><%= i %></td>
          <td><%= table[i] %></td>
          <td><%= cumul[i] %></td>
        </tr>
      <% end %>
    </table>

    <%= form_tag("/admin/remove_questions", method: "post", class: "basic-number-form", onsubmit: "clearInput(this, 'threshold')") do %>
      <%= number_field_tag(:threshold, nil, placeholder: "Threshold", autocomplete: "off") %>
      <%= submit_tag("Remove", class: "submit-button")%>
    <% end %>
  </div>
</div>

<script type="text/javascript">
  function clearInput(div, id) {
    setTimeout(function() {
      document.getElementById(id).value = "";
    }, 800);
  }
</script>
